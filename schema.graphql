### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Mutation {
  createDraft(authorId: String!, body: String!, title: String!): Post!
  createUser(email: String!, password: String!, username: String!): User
  deletePost(postId: String!, userId: String!): Post
  deleteUser(id: String!): User
  login(email: String!, password: String!): AuthPayload
  publish(draftId: String!, userId: String!): Post
}

type Post {
  author: User
  authorId: String
  body: String
  id: String
  published: Boolean
  title: String
}

type Query {
  allDrafts: [Post]!
  allPosts: [Post]
  allUsers: [User]!
  currentUser: User
  searchPosts(searchString: String!): [Post]
  userById(id: String!): User
}

scalar UUID

type User {
  email: String!
  id: String!
  password: String!
  posts: [Post]
  username: String!
}
